# Prometheus configuration for SweetSpot Cowork monitoring

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'sweetspot-cowork'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'
rule_files:
  - "alert_rules.yml"
  - "recording_rules.yml"

# Scrape configuration
scrape_configs:
  # Prometheus self-monitoring
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 5s
    metrics_path: /metrics

  # SweetSpot Frontend Application
  - job_name: 'sweetspot-frontend'
    static_configs:
      - targets: ['frontend:3000']
    scrape_interval: 10s
    metrics_path: /api/metrics
    scrape_timeout: 5s
    honor_labels: true
    params:
      format: ['prometheus']

  # SweetSpot Backend Application
  - job_name: 'sweetspot-backend'
    static_configs:
      - targets: ['backend:8000']
    scrape_interval: 10s
    metrics_path: /metrics
    scrape_timeout: 5s

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s

  # Redis metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 15s

  # PostgreSQL metrics
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 15s

  # Nginx metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx-exporter:9113']
    scrape_interval: 15s

  # Docker container metrics
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 15s

  # Blackbox monitoring for external endpoints
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - https://app.sweetspotcowork.com
        - https://api.sweetspotcowork.com/health
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

# Recording rules for better performance
recording_rules:
  - name: sweetspot.rules
    rules:
      # Request rate
      - record: sweetspot:http_requests:rate5m
        expr: |
          sum(rate(http_requests_total[5m])) by (instance, job, method, status)

      # Error rate
      - record: sweetspot:http_requests:error_rate5m
        expr: |
          sum(rate(http_requests_total{status=~"5.."}[5m])) by (instance, job)
          /
          sum(rate(http_requests_total[5m])) by (instance, job)

      # Response time percentiles
      - record: sweetspot:http_request_duration:p95
        expr: |
          histogram_quantile(0.95, sum(rate(http_request_duration_seconds_bucket[5m])) by (instance, job, le))

      - record: sweetspot:http_request_duration:p99
        expr: |
          histogram_quantile(0.99, sum(rate(http_request_duration_seconds_bucket[5m])) by (instance, job, le))

      # Database connection metrics
      - record: sweetspot:db_connections:usage_ratio
        expr: |
          sum(db_connections_active) by (instance)
          /
          sum(db_connections_max) by (instance)

      # Memory usage
      - record: sweetspot:memory:usage_ratio
        expr: |
          (1 - (node_memory_MemAvailable_bytes / node_memory_MemTotal_bytes)) * 100

      # CPU usage
      - record: sweetspot:cpu:usage_ratio
        expr: |
          100 - (avg by (instance) (irate(node_cpu_seconds_total{mode="idle"}[5m])) * 100)

      # Disk usage
      - record: sweetspot:disk:usage_ratio
        expr: |
          (1 - (node_filesystem_avail_bytes{fstype!="tmpfs"} / node_filesystem_size_bytes{fstype!="tmpfs"})) * 100

# Alerting rules
alerting_rules:
  - name: sweetspot.alerts
    rules:
      # High error rate
      - alert: HighErrorRate
        expr: sweetspot:http_requests:error_rate5m > 0.05
        for: 5m
        labels:
          severity: warning
          service: sweetspot-cowork
        annotations:
          summary: "High error rate detected"
          description: "Error rate is {{ $value | humanizePercentage }} for {{ $labels.instance }}"

      # High response time
      - alert: HighResponseTime
        expr: sweetspot:http_request_duration:p95 > 2
        for: 5m
        labels:
          severity: warning
          service: sweetspot-cowork
        annotations:
          summary: "High response time detected"
          description: "95th percentile response time is {{ $value }}s for {{ $labels.instance }}"

      # Application down
      - alert: ApplicationDown
        expr: up{job=~"sweetspot-.*"} == 0
        for: 1m
        labels:
          severity: critical
          service: sweetspot-cowork
        annotations:
          summary: "Application is down"
          description: "{{ $labels.job }} on {{ $labels.instance }} is down"

      # High memory usage
      - alert: HighMemoryUsage
        expr: sweetspot:memory:usage_ratio > 85
        for: 5m
        labels:
          severity: warning
          service: sweetspot-cowork
        annotations:
          summary: "High memory usage"
          description: "Memory usage is {{ $value }}% on {{ $labels.instance }}"

      # High CPU usage
      - alert: HighCPUUsage
        expr: sweetspot:cpu:usage_ratio > 80
        for: 5m
        labels:
          severity: warning
          service: sweetspot-cowork
        annotations:
          summary: "High CPU usage"
          description: "CPU usage is {{ $value }}% on {{ $labels.instance }}"

      # High disk usage
      - alert: HighDiskUsage
        expr: sweetspot:disk:usage_ratio > 85
        for: 5m
        labels:
          severity: warning
          service: sweetspot-cowork
        annotations:
          summary: "High disk usage"
          description: "Disk usage is {{ $value }}% on {{ $labels.instance }}"

      # Database connection pool exhaustion
      - alert: DatabaseConnectionPoolHigh
        expr: sweetspot:db_connections:usage_ratio > 0.8
        for: 2m
        labels:
          severity: warning
          service: sweetspot-cowork
        annotations:
          summary: "Database connection pool usage high"
          description: "Database connection pool usage is {{ $value | humanizePercentage }} on {{ $labels.instance }}"

      # SSL certificate expiration
      - alert: SSLCertificateExpiration
        expr: probe_ssl_earliest_cert_expiry - time() < 86400 * 30
        for: 1h
        labels:
          severity: warning
          service: sweetspot-cowork
        annotations:
          summary: "SSL certificate will expire soon"
          description: "SSL certificate for {{ $labels.instance }} will expire in {{ $value | humanizeDuration }}"

      # Redis down
      - alert: RedisDown
        expr: up{job="redis"} == 0
        for: 1m
        labels:
          severity: critical
          service: sweetspot-cowork
        annotations:
          summary: "Redis is down"
          description: "Redis instance on {{ $labels.instance }} is down"

      # PostgreSQL down
      - alert: PostgreSQLDown
        expr: up{job="postgres"} == 0
        for: 1m
        labels:
          severity: critical
          service: sweetspot-cowork
        annotations:
          summary: "PostgreSQL is down"
          description: "PostgreSQL instance on {{ $labels.instance }} is down"

# Remote write configuration (for long-term storage)
remote_write:
  - url: "http://victoriametrics:8428/api/v1/write"
    queue_config:
      max_samples_per_send: 1000
      batch_send_deadline: 5s
      min_shards: 1
      max_shards: 200

# Remote read configuration
remote_read:
  - url: "http://victoriametrics:8428/api/v1/read"
    read_recent: true

# Storage configuration
storage:
  tsdb:
    retention.time: 15d
    retention.size: 10GB
    wal-compression: true