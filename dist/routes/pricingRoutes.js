"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.pricingRoutes = void 0;
const express_1 = require("express");
const pricingController_1 = require("../controllers/pricingController");
const auth_1 = require("../middleware/auth");
const router = (0, express_1.Router)();
exports.pricingRoutes = router;
router.use(auth_1.authenticate);
router.post('/calculate', pricingController_1.pricingController.calculatePrice);
router.get('/preview/:planType', pricingController_1.pricingController.getPreviewPricing);
router.get('/plans', pricingController_1.pricingController.getPlansWithPricing);
router.get('/tiers', pricingController_1.pricingController.getPricingTiers);
router.get('/tiers/:id', pricingController_1.pricingController.getPricingTierById);
router.post('/tiers', pricingController_1.pricingController.createPricingTier);
router.put('/tiers/:id', pricingController_1.pricingController.updatePricingTier);
router.delete('/tiers/:id', pricingController_1.pricingController.deletePricingTier);
router.get('/rules', pricingController_1.pricingController.getPricingRules);
router.get('/tiers/:tierId/rules', pricingController_1.pricingController.getRulesByTier);
router.post('/rules', pricingController_1.pricingController.createPricingRule);
router.post('/rules/validate', pricingController_1.pricingController.validatePricingRule);
router.put('/rules/:id', pricingController_1.pricingController.updatePricingRule);
router.delete('/rules/:id', pricingController_1.pricingController.deletePricingRule);
router.post('/bulk-update', pricingController_1.pricingController.bulkUpdatePrices);
//# sourceMappingURL=pricingRoutes.js.map