"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.quotationRoutes = void 0;
const express_1 = require("express");
const quotationController_1 = require("../controllers/quotationController");
const auth_1 = require("../middleware/auth");
const router = (0, express_1.Router)();
exports.quotationRoutes = router;
router.use(auth_1.authenticate);
router.get('/stats', quotationController_1.quotationController.getQuotationStats);
router.get('/expiring', quotationController_1.quotationController.getExpiringQuotations);
router.get('/by-client/:clientId', quotationController_1.quotationController.getQuotationsByClient);
router.get('/by-opportunity/:opportunityId', quotationController_1.quotationController.getQuotationsByOpportunity);
router.get('/', quotationController_1.quotationController.getQuotations);
router.get('/:id', quotationController_1.quotationController.getQuotationById);
router.post('/', quotationController_1.quotationController.createQuotation);
router.put('/:id', quotationController_1.quotationController.updateQuotation);
router.delete('/:id', quotationController_1.quotationController.deleteQuotation);
router.post('/:id/send', quotationController_1.quotationController.sendQuotation);
router.post('/:id/accept', quotationController_1.quotationController.acceptQuotation);
router.post('/:id/reject', quotationController_1.quotationController.rejectQuotation);
router.post('/:id/view', quotationController_1.quotationController.markAsViewed);
router.post('/:id/convert-to-contract', quotationController_1.quotationController.convertToContract);
router.post('/:id/duplicate', quotationController_1.quotationController.duplicateQuotation);
//# sourceMappingURL=quotationRoutes.js.map