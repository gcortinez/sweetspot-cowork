import { Response } from 'express';
import { AuthenticatedRequest } from '../types/api';
export declare const createBillingCycle: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getBillingCycles: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const createSubscription: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getSubscriptions: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const updateSubscription: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const cancelSubscription: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const trackConsumption: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getUsageRecords: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getConsumptionSummary: (req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>;
export declare const getUsageReport: (req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>;
export declare const generateInvoice: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const generateRecurringInvoices: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const createPaymentMethod: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getPaymentMethods: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const updatePaymentMethod: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const deletePaymentMethod: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const processPayment: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const refundPayment: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const createPaymentIntent: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getBillingSettings: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const updateBillingSettings: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const runAutomationWorkflows: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const runInvoiceGenerationWorkflow: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const runPaymentCollectionWorkflow: (req: AuthenticatedRequest, res: Response) => Promise<void>;
export declare const getBillingReport: (req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>;
export declare const getPaymentAnalytics: (req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>;
export declare const reconcilePayments: (req: AuthenticatedRequest, res: Response) => Promise<Response<any, Record<string, any>> | undefined>;
//# sourceMappingURL=billingController.d.ts.map